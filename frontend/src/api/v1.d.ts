/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/login/employee": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginRequestSchema"];
        };
      };
      responses: {
        /** @description login succeeded */
        201: {
          content: {
            "application/json": components["schemas"]["LoginResPonseSchema"];
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description user not found */
        404: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/login/employer": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["LoginRequestSchema"];
        };
      };
      responses: {
        /** @description login succeeded */
        201: {
          content: {
            "application/json": components["schemas"]["LoginResPonseSchema"];
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description user not found */
        404: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/user/confirmedShift": {
    get: {
      parameters: {
        query: {
          year: string;
          month: string;
        };
      };
      responses: {
        /** @description successfully update shift request */
        200: {
          content: {
            "application/json": components["schemas"]["ShiftInMonthResponseSchema"];
          };
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/employer/user": {
    get: {
      responses: {
        /** @description successfully get user list */
        200: {
          content: {
            "application/json": components["schemas"]["UserListResponseSchema"];
          };
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UserRegisterRequestSchema"];
        };
      };
      responses: {
        /** @description successfully registered the user */
        201: {
          content: {
            "application/json": components["schemas"]["UserResponseSchema"];
          };
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/employer/user/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description successfully delete the user */
        204: {
          content: never;
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/employer/attendance/{id}": {
    get: {
      parameters: {
        query: {
          year: string;
          month: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description successfully get attendance list */
        200: {
          content: {
            "application/json": components["schemas"]["GetAttendanceInMonthResponseSchema"];
          };
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/employee/confirmedShift": {
    patch: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ShiftInMonthResponseSchema"];
        };
      };
      responses: {
        /** @description successfully update shift request */
        200: {
          content: never;
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/employer/shiftRequest": {
    get: {
      parameters: {
        query: {
          year: string;
          month: string;
        };
      };
      responses: {
        /** @description successfully update shift request */
        200: {
          content: {
            "application/json": components["schemas"]["ShiftInMonthResponseSchema"];
          };
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/employee/shiftRequest": {
    patch: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["UpdateShiftRequestInMonthSchema"];
        };
      };
      responses: {
        /** @description successfully update shift request */
        200: {
          content: never;
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
  "/api/employee/attendance": {
    get: {
      parameters: {
        query: {
          year: string;
          month: string;
        };
      };
      responses: {
        /** @description successfully get attendance list */
        200: {
          content: {
            "application/json": components["schemas"]["GetAttendanceInMonthResponseSchema"];
          };
        };
        /** @description bad request */
        400: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description unauthorized */
        401: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description not employer */
        403: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
        /** @description internal server error */
        500: {
          content: {
            "application/json": {
              message: string;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    LoginResPonseSchema: {
      sessionID: string;
    };
    LoginRequestSchema: {
      name: string;
      password: string;
    };
    ShiftInMonthResponseSchema: {
        userID: number;
        shiftTime: string[][];
      }[];
    UserResponseSchema: {
      id: number;
      /** @enum {string} */
      type: "employer" | "employee";
      name: string;
    };
    UserRegisterRequestSchema: {
      name: string;
      /** @enum {string} */
      type: "employer" | "employee";
      password: string;
    };
    UserListResponseSchema: components["schemas"]["UserResponseSchema"][];
    GetAttendanceInMonthResponseSchema: {
      userID: number;
      attendances: ({
          /** Format: date-time */
          time: string;
          /** @enum {string} */
          state: "checkIn" | "checkOut" | "breakStart" | "breakEnd";
        })[];
    };
    /** @description ある月のシフト希望が送られることを想定 */
    UpdateShiftRequestInMonthSchema: string[][];
  };
  responses: never;
  parameters: {
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
